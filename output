
> blockchain@1.0.0 start /home/achadde/sources/javascript/websocket-blockchain
> nodemon main.js

[33m[nodemon] 1.19.1[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node main.js`[39m

Dans main InitialPeers []

Entr√©e dans block.js:Block constructor avec index 0 

Entr√©e dans websocket.js:connectToPeers appel√© par main avec 0 newPeers
Sortie  de  websocket.js:connectToPeers

===== Entr√©e dans websocket.js:initHttpServer appel√© par main =====
      Sortie  de websocket.js:initHttpServer

===== Entr√©e dans websocket.js:initP2PServer appel√© par main avec p2p_port 6001 =====
============ dans websocket.js:initP2PServer cr√©ation du WebSocket.Server en √âcoute du port P2P sur 6001 =====
      Sortie  de  websocket.js:initP2PServer

===== Fin de main =====


===== Dans websocket.js:initHttpServer √âcoute sur le port HTTP 3001 =====

===== Entr√©e dans websocket.js:initConnection nouvelle connexion √† undefined =====

dans websocket.js:initConnection ws pour ws.url undefined ajout√© √† A.socket_a
dans websocket.js:initConnection socket_a [ WebSocket {
    _events: [Object: null prototype] { close: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    _socket:
     Socket {
       connecting: false,
       _hadError: false,
       _handle: [TCP],
       _parent: null,
       _host: null,
       _readableState: [ReadableState],
       readable: true,
       _events: [Object],
       _eventsCount: 5,
       _maxListeners: undefined,
       _writableState: [WritableState],
       writable: true,
       allowHalfOpen: false,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: [Server],
       _server: [Server],
       timeout: 0,
       parser: null,
       on: [Function],
       _paused: false,
       [Symbol(asyncId)]: 22,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]:
        Timeout {
          _called: false,
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 10679,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(unrefed)]: true,
          [Symbol(asyncId)]: 23,
          [Symbol(triggerId)]: 22 },
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0 },
    _ultron: Ultron { id: 0, ee: [Socket] },
    _closeReceived: false,
    bytesReceived: 0,
    readyState: 1,
    supports: { binary: true },
    extensions: { 'permessage-deflate': [PerMessageDeflate] },
    _binaryType: 'nodebuffer',
    protocol: undefined,
    protocolVersion: 13,
    upgradeReq:
     IncomingMessage {
       _readableState: [ReadableState],
       readable: true,
       _events: [Object],
       _eventsCount: 1,
       _maxListeners: undefined,
       socket: [Socket],
       connection: [Socket],
       httpVersionMajor: 1,
       httpVersionMinor: 1,
       httpVersion: '1.1',
       complete: true,
       headers: [Object],
       rawHeaders: [Array],
       trailers: {},
       rawTrailers: [],
       aborted: false,
       upgrade: true,
       url: '/',
       method: 'GET',
       statusCode: null,
       statusMessage: null,
       client: [Socket],
       _consuming: false,
       _dumped: false,
       parser: null },
    _isServer: true,
    maxPayload: 104857600,
    _receiver:
     Receiver {
       fragmentedBufferPool: [BufferPool],
       unfragmentedBufferPool: [BufferPool],
       extensions: [Object],
       maxPayload: 104857600,
       currentPayloadLength: 0,
       state: [Object],
       overflow: [],
       headerBuffer: <Buffer 00 00 00 00 00 00 00 00 00 00>,
       expectOffset: 0,
       expectBuffer: <Buffer 00 00>,
       expectHandler: [Function],
       currentMessage: [],
       currentMessageLength: 0,
       messageHandlers: [],
       dead: false,
       processing: false,
       onerror: [Function: onerror],
       ontext: [Function: ontext],
       onbinary: [Function: onbinary],
       onclose: [Function: onclose],
       onping: [Function: onping],
       onpong: [Function: onpong] },
    _sender:
     Sender {
       _events: [Object],
       _eventsCount: 1,
       _maxListeners: undefined,
       _socket: [Socket],
       extensions: [Object],
       firstFragment: true,
       compress: false,
       messageHandlers: [],
       processing: false } } ]

===== Entr√©e dans websocket.js:initMessageHandler appel√© par websocket.js:initConnection avec ws.url undefined =====

dans websocket.js:initMessageHandler il y a 1 sockets
dans websocket.js:initMessageHandler blockChain [ Block {
    index: 0,
    typeContenu: 'texte',
    contenu: 'bloc genesis de websocket-blockchain',
    horodatage: 1573131984.642,
    auteurClePublique: 'cl√© publique',
    hashPrecedent: 'hash vide',
    hashCourant:
     '0043c14bfd8480be0bdf335fb5c0eb75ea70458056908df980902687ff7fcd18' } ]
      Sortie de websocket.js:initMessageHandler
Entr√©e dans websocket.js:initErrorHandler appel√© par websocket.js:initConnection
Sortie de  websocket.js:initErrorHandler
Dans websocket.js:initConnection √©criture de queryChainLengthMsg { type: 0 } dans ws.url undefined
Entr√©e dans websocket.js:write appel√© par websocket.js:initConnection avec ws.url undefined message { type: 0 }
Sortie  de websocket.js:write
      Sortie  de websocket.js:initConnection
Dans websocket.js:initMessageHandler ws.on Message Re√ßu data {"type":0}
Dans websocket.js:initMessageHandler message.type 0
Entr√©e dans websocket.js:responseLatestMsg
dans websocket.js:responseLatestMsg il y a 1 blocs
Sortie  de websocket.js:responseLatestMsg result { type: 2,
  data:
   '[{"index":0,"typeContenu":"texte","contenu":"bloc genesis de websocket-blockchain","horodatage":1573131984.642,"auteurClePublique":"cl√© publique","hashPrecedent":"hash vide","hashCourant":"0043c14bfd8480be0bdf335fb5c0eb75ea70458056908df980902687ff7fcd18"}]' }
Dans websocket.js:initMessageHandler write dans undefined de responseLatestMsg { type: 2,
  data:
   '[{"index":0,"typeContenu":"texte","contenu":"bloc genesis de websocket-blockchain","horodatage":1573131984.642,"auteurClePublique":"cl√© publique","hashPrecedent":"hash vide","hashCourant":"0043c14bfd8480be0bdf335fb5c0eb75ea70458056908df980902687ff7fcd18"}]' }
Entr√©e dans websocket.js:responseLatestMsg
dans websocket.js:responseLatestMsg il y a 1 blocs
Sortie  de websocket.js:responseLatestMsg result { type: 2,
  data:
   '[{"index":0,"typeContenu":"texte","contenu":"bloc genesis de websocket-blockchain","horodatage":1573131984.642,"auteurClePublique":"cl√© publique","hashPrecedent":"hash vide","hashCourant":"0043c14bfd8480be0bdf335fb5c0eb75ea70458056908df980902687ff7fcd18"}]' }
Entr√©e dans websocket.js:write appel√© par websocket.js:initMessageHandler avec ws.url undefined message { type: 2,
  data:
   '[{"index":0,"typeContenu":"texte","contenu":"bloc genesis de websocket-blockchain","horodatage":1573131984.642,"auteurClePublique":"cl√© publique","hashPrecedent":"hash vide","hashCourant":"0043c14bfd8480be0bdf335fb5c0eb75ea70458056908df980902687ff7fcd18"}]' }
Sortie  de websocket.js:write
Dans websocket.js:initMessageHandler ws.on Message Re√ßu data {"type":2,"data":"[{\"index\":0,\"typeContenu\":\"texte\",\"contenu\":\"bloc genesis de websocket-blockchain\",\"horodatage\":1573131995.136,\"auteurClePublique\":\"cl√© publique\",\"hashPrecedent\":\"hash vide\",\"hashCourant\":\"0043c14bfd8480be0bdf335fb5c0eb75ea70458056908df980902687ff7fcd18\"}]"}
Dans websocket.js:initMessageHandler message.type 2
Dans websocket.js:initMessageHandler appel de handleBlockchainResponse

Entr√©e dans websocket.js:handleBlockchainResponse appel√© par websocket.js:initMessageHandler message { type: 2,
  data:
   '[{"index":0,"typeContenu":"texte","contenu":"bloc genesis de websocket-blockchain","horodatage":1573131995.136,"auteurClePublique":"cl√© publique","hashPrecedent":"hash vide","hashCourant":"0043c14bfd8480be0bdf335fb5c0eb75ea70458056908df980902687ff7fcd18"}]' }
Dans websocket.js:handleBlockchainResponse Tous les Blocs re√ßus: [ { index: 0,
    typeContenu: 'texte',
    contenu: 'bloc genesis de websocket-blockchain',
    horodatage: 1573131995.136,
    auteurClePublique: 'cl√© publique',
    hashPrecedent: 'hash vide',
    hashCourant:
     '0043c14bfd8480be0bdf335fb5c0eb75ea70458056908df980902687ff7fcd18' } ]
Dans websocket.js:handleBlockchainResponse Dernier  Bloc stock√©: Block {
  index: 0,
  typeContenu: 'texte',
  contenu: 'bloc genesis de websocket-blockchain',
  horodatage: 1573131984.642,
  auteurClePublique: 'cl√© publique',
  hashPrecedent: 'hash vide',
  hashCourant:
   '0043c14bfd8480be0bdf335fb5c0eb75ea70458056908df980902687ff7fcd18' }
Dans websocket.js:handleBlockchainResponse Index du dernier block: 0
Dans websocket.js:handleBlockchainResponse Index du block    re√ßu: 0
Dans websocket.js:handleBlockchainResponse La blockchain a re√ßu un block genesis (index = 0). Ne rien faire.
Sortie  de websocket.js:handleBlockchainResponse

===== Bloc # 0 fin de handleBlockchainResponse =====
Dans websocket.js:initErrorHandler √©chec de la connexion au pair ws.url undefined
